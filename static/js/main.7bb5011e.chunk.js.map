{"version":3,"sources":["components/Display.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Display","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","node","document","getElementById","parentNode","removeChild","console","log","error","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","AppBar","Toolbar","Typography","variant","noWrap","onSubmit","InputBase","name","placeholder","root","input","inputProps","value","onChange","target","aria-controls","aria-haspopup","event","currentTarget","filter","map","key","App","aria-hidden","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7bb5011e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Display({movie}) {\n\n return (\n    <div className=\"card\">\n        <img className=\"card--image\"\n            src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n            alt={movie.title + ' poster'}\n            />\n        <div className=\"card--content\">\n            <h3 className=\"card--title\">{movie.title}</h3>\n            <p><small>RELEASE DATE: {movie.release_date}</small></p>\n            <p><small>RATING: {movie.vote_average}</small></p>\n        </div>\n        <p className=\"card--desc\">{movie.overview}</p>\n    </div>\n                \n )\n}","import React, {useState} from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n// import AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Display from './Display'\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (e) => {\n    e.preventDefault();\n    \n    const url = `https://api.themoviedb.org/3/search/movie?api_key=50ee20a8e3da5025fd2012e0cc6f35ad&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        setMovies(data.results);\n        let node = document.getElementById(\"jumbotron\");\n            if (node.parentNode) {\n            node.parentNode.removeChild(node);\n}\n        console.log(data);\n    }catch(err){\n        console.error(err)\n    }\n }\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  // const handleProfileMenuOpen = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <LocalMoviesIcon />\n        </IconButton>\n        <p>About</p>\n      </MenuItem>\n      {/* <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem> */}\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            AMDb\n          </Typography>\n          <form onSubmit={searchMovies}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              name='query'\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={query} onChange={(e) => setQuery(e.target.value)}\n            />\n          </div>\n          </form>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                About\n            </IconButton>\n            {/* <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton> */}\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n            </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n      <div className='card-container'>\n        <div className='card-list'>\n        {movies.filter(movie => movie.poster_path).map(movie => (\n            <Display movie={movie} key={movie.id} />\n        ))}   \n        </div>   \n        </div>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar /> \n      <div id=\"jumbotron\">\n        <div className=\"greeting\">\n          <h1>All Movie Database</h1>    \n          <p>Get all the behind the scenes info on all your favorite movies</p>\n          <p>Type your movie title into the search bar and hit enter to begin</p>\n          <img className=\"clapper\" aria-hidden=\"true\" src=\"clapperboard.png\" alt=\"\" />\n        </div>\n        <div className=\"desktopImg\">\n              <img className=\"popcorn\" aria-hidden=\"true\" src=\"popcorn.png\" alt=\"\" />\n            </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}